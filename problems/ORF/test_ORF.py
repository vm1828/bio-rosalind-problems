from problems.ORF.ORF import ORFSolution
from shared.testing_utils import solution_output, compare_in_any_order


test_input_1 = """>Rosalind_99
AGCCATGTAGCTAACTCAGGTTACATGGGGATGACCCCGCGACTTGGATTAGAGTCTCTTTTGGAATAAGCCTGAATGATCCGAGTAGCATCTCAG
"""
expected_output_1 = """MLLGSFRLIPKETLIQVAGSSPCNLS
M
MGMTPRLGLESLLE
MTPRLGLESLLE\n"""

test_input_2 = """>Rosalind_3215
GTCGCCTAGGAGTTACGATAACACAGCGACAAAGCGCTTATACCTTACGGATGAGCCTTA
CGTGATTATCCTTCCCTAAAGCGACTCATATACGCACATTAAACGGGTGTTATGTCCAAT
ACAAAACAACACACTCCTTGTAAGCGCTTCAGTGTGACAACTCCTAGGCAATGACCCTGC
CGTTACCTTATATCCATCATAGTCACTGTTCACGTGTTCAAAGTGCAGCGCCCGACTGTT
CGACCGAAGAATCCTTAATTAATCTACCGGGCTGGCCCTCCAACGAGAACGCAACCCTGA
TTATGTGATCCATTTCTATAGGTAATTGTCCGCTAGCGGCGACTTCGTACAGCCATCTCG
CCATATACGTACGCTAAGTTCGTGAAGGTCTCCCGCAACAGCACGGAGGGGGAGCTAGAC
ACTGTCGGATATTGTATTAACAGAAGGCTCCATGAGGGTAGTCCATGCACCAAGGACGGA
GAGGGGTCCTGCTCTAGCTAGAGCAGGACCCCTCTCCGTCCTTGGTGCATGTCATTACGT
GCGATACAATGTAGAACCCACCTAAGGAAGTCAAATAACGTTTGCCGGTGAAGTAGGAGG
TGTCAATTGATATATTAGAGGATCTAACCTTGTAATTGAGCAGCTCTACTCCTCAAACTA
TTAAAAAAAGCCGAAGAGAGTTCCATATATAAGGTAAAACGCCATTGTAACTTCCGGAGA
TTACGTACCTATGCGCTCACGTTACTCCATGAATCTGCCGGGTCAATGTAAAACTATCCG
GTCAAAGAAGGCACTGATTGATGAACGCGCGTCCATGTGCAAATGTAACAAGTCATACGA
AAACAAACAGATTACACTGCCGAAGTAGAAATGGTACCAAGGCGCCTTTATGCCGTCCGG
CTCAGATTCCAATGGGCTACTAGTTTTCCGTCACCGCAAGGAGGCAGCTCGCGATCTTCT
CTTCGCCTATGGTAGCCAGTTGCACCTAGCACGA"""
expected_output_2 = """MSRFREG
MRVVHAPRTERGPALARAGPLSVLGACHYVRYNVEPT
MSLRAIQCRTHLRKSNNVCR
MEPSVNTISDSV
MVASCT
MCKCNKSYENKQITLPK
ME
MGY
MTCTKDGEGSCSS
MDARSSISAFFDRIVLH
MRSRYSMNLPGQCKTIRSKKALIDERASMCKCNKSYENKQITLPK
MDHIIRVAFSLEGQPGRLIKDSSVEQSGAAL
MELSSAFFNSLRSRAAQLQG
MVPRRLYAVRLRFQWATSFPSPQGGSSRSSLRLW
MNLPGQCKTIRSKKALIDERASMCKCNKSYENKQITLPK
MTCYICTWTRVHQSVPSLTG
M
MHQGRRGVLL
MDIR
MDYPHGAFC
MARWLYEVAASGQLPIEMDHIIRVAFSLEGQPGRLIKDSSVEQSGAAL
MTLPLPYIHHSHCSRVQSAAPDCSTEESLINLPGWPSNENATLIM
MSLT
MNARPCANVTSHTKTNRLHCRSRNGTKAPLCRPAQIPMGY
MAVRSRR
MSNTKQHTPCKRFSVTTPRQ
MCVYESL
MMDIR
MAFYLIYGTLFGFF"""


def test_ORFSolution_1(compare_in_any_order):
    actual_output = solution_output(ORFSolution, test_input_1)
    assert compare_in_any_order(actual_output, expected_output_1)


def test_ORFSolution_2(compare_in_any_order):
    actual_output = solution_output(ORFSolution, test_input_2)
    assert compare_in_any_order(actual_output, expected_output_2)
